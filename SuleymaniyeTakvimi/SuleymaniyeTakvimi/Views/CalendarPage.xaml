<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="SuleymaniyeTakvimi.Views.CalendarPage" xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView" xmlns:resources="clr-namespace:SuleymaniyeTakvimi.Localization;assembly=SuleymaniyeTakvimi" xmlns:viewModels="clr-namespace:SuleymaniyeTakvimi.ViewModels;assembly=SuleymaniyeTakvimi" xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Name="Page"
             Title="{Binding Title, StringFormat={x:Static resources:AppResources.PageTitle}}">
    <!--<ContentPage.BindingContext>
        <viewModels:CalendarViewModel />
    </ContentPage.BindingContext>-->
    <ContentPage.Content>
        <Grid Padding="25,0,0,0" ColumnDefinitions="Auto, *, Auto" RowDefinitions="Auto, Auto, Auto, *">
            <!--  Corner image  -->
            <Image Grid.Row="0" Grid.Column="2" HeightRequest="100" Margin="12,2" Source="app_logo" />
            <!--  Schedule timeline  -->
            <Label Grid.Row="1" Grid.Column="0" HeightRequest="50" Margin="5,-85,0,0" VerticalOptions="Start" FontFamily="MaterialIcons" FontSize="45"
                   TextColor="#623323" Text="&#xe614;" />
            <!--<Image Grid.Row="1" Grid.Column="0" Source="icon_calendar" HeightRequest="50" Margin="0,-85,0,0" VerticalOptions="Start"/>-->
            <BoxView Grid.Row="2" Grid.Column="0" WidthRequest="5" HeightRequest="30" Margin="26,-40,25,10" VerticalOptions="StartAndExpand" Color="DeepSkyBlue" />
            <!--  Date description  -->
            <Label Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="-5,-85,0,0" Padding="0" FontAttributes="Bold" FontSize="30"
                   TextColor="#623323"
                   Text="{Binding Today}" />

            <!--  Shedule list structure  -->
            <CollectionView Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" VerticalOptions="Start" VerticalScrollBarVisibility="Never" ItemsSource="{Binding schedule}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto">
                            <!--  Schedule time  -->
                            <Label Grid.Row="0" Grid.Column="0" FontAttributes="Bold" FontSize="24" TextColor="Brown" Text="{Binding Hour}" />
                            <!--  Vertical Line  -->
                            <BoxView Grid.Row="1" Grid.Column="0" WidthRequest="5" HeightRequest="30" Margin="25,0,78,0" Color="DeepSkyBlue" />
                            <!--  Card  -->
                            <pancakeView:PancakeView Grid.RowSpan="2" Grid.Column="1" Style="{StaticResource card}" Margin="0,5,30,20" Padding="12" CornerRadius="0,25,0,25">
                                <!--<Frame Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" CornerRadius="25" HasShadow="True" Margin="5,0,30,35">-->
                                <pancakeView:PancakeView.Triggers>
                                    <DataTrigger Binding="{Binding State}" TargetType="pancakeView:PancakeView" Value="Passed">
                                        <Setter Property="BackgroundColor" Value="AntiqueWhite" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" TargetType="pancakeView:PancakeView" Value="Happening">
                                        <Setter Property="BackgroundColor" Value="Gold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" TargetType="pancakeView:PancakeView" Value="Waiting">
                                        <Setter Property="BackgroundColor" Value="LightGreen" />
                                    </DataTrigger>
                                </pancakeView:PancakeView.Triggers>
                                <StackLayout>
                                    <xct:Expander CollapseAnimationEasing="{x:Static Easing.SpringOut}" ExpandAnimationEasing="{x:Static Easing.SpringIn}">
                                        <xct:Expander.Header>
                                            <StackLayout Orientation="Horizontal">
                                                <Label HeightRequest="35" Margin="3,0" HorizontalOptions="StartAndExpand" FontAttributes="Bold" FontSize="22" TextColor="#623323" Text="{Binding Title}" />
                                                <Label Margin="7,0" HorizontalOptions="End" FontFamily="MaterialIcons" FontSize="28" TextColor="Chocolate" Text="&#xe7f6;">
                                                    <Label.Triggers>
                                                        <DataTrigger Binding="{Binding ReminderOn}" TargetType="Label" Value="False">
                                                            <Setter Property="Text" Value="&#xe7f6;" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ReminderOn}" TargetType="Label" Value="True">
                                                            <Setter Property="Text" Value="&#xe7f5;" />
                                                        </DataTrigger>
                                                    </Label.Triggers>
                                                </Label>
                                            </StackLayout>
                                        </xct:Expander.Header>
                                        <StackLayout Padding="0,5,0,0" Orientation="Vertical">
                                            <StackLayout HorizontalOptions="StartAndExpand" VerticalOptions="Center" Orientation="Horizontal">
                                                <Switch IsToggled="{Binding ReminderOn}">
                                                    <!--  ThumbColor="DeepSkyBlue"  -->
                                                    <Switch.Behaviors>
                                                        <xct:EventToCommandBehavior EventName="Toggled" Command="{Binding Source={x:Reference Page}, Path=BindingContext.ReminderEnabledChanged}" CommandParameter="{Binding .}" />
                                                    </Switch.Behaviors>
                                                </Switch>
                                                <Label VerticalTextAlignment="Center" FontSize="Medium" TextColor="SaddleBrown" Text="{x:Static resources:AppResources.EtkinlestirSwitch}" />
                                            </StackLayout>
                                            <StackLayout HorizontalOptions="StartAndExpand" VerticalOptions="Center" Orientation="Horizontal">
                                                <Switch IsEnabled="{Binding ReminderOn}" IsToggled="{Binding Vibration}">
                                                    <!--  Color="DeepSkyBlue"  -->
                                                    <Switch.Behaviors>
                                                        <xct:EventToCommandBehavior EventName="Toggled" Command="{Binding Source={x:Reference Page}, Path=BindingContext.VibrationCheckedChanged}" CommandParameter="{Binding .}" />
                                                    </Switch.Behaviors>
                                                </Switch>
                                                <Label VerticalTextAlignment="Center" FontSize="16" IsEnabled="{Binding ReminderOn}" TextColor="DarkRed" Text="{x:Static resources:AppResources.TitresimSwitch}" />
                                            </StackLayout>
                                            <StackLayout HorizontalOptions="StartAndExpand" VerticalOptions="Center" Orientation="Horizontal">
                                                <Switch IsEnabled="{Binding ReminderOn}" IsToggled="{Binding Notification}">
                                                    <!--  Color="DeepSkyBlue"  -->
                                                    <Switch.Behaviors>
                                                        <xct:EventToCommandBehavior EventName="Toggled" Command="{Binding Source={x:Reference Page}, Path=BindingContext.NotificationCheckedChanged}" CommandParameter="{Binding .}" />
                                                    </Switch.Behaviors>
                                                </Switch>
                                                <Label VerticalTextAlignment="Center" FontSize="16" IsEnabled="{Binding ReminderOn}" TextColor="DarkRed" Text="{x:Static resources:AppResources.BildirimGosterSwitch}" />
                                            </StackLayout>
                                            <StackLayout Grid.ColumnSpan="2" HorizontalOptions="FillAndExpand" Orientation="Horizontal">
                                                <Switch IsEnabled="{Binding ReminderOn}" IsToggled="{Binding Alarm}">
                                                    <!--  Color="Maroon"  -->
                                                    <Switch.Behaviors>
                                                        <xct:EventToCommandBehavior EventName="Toggled" Command="{Binding Source={x:Reference Page}, Path=BindingContext.AlarmCheckedChanged}" CommandParameter="{Binding .}" />
                                                    </Switch.Behaviors>
                                                </Switch>
                                                <Label VerticalTextAlignment="Center" FontSize="16" IsEnabled="{Binding ReminderOn}" TextColor="DarkRed" Text="{x:Static resources:AppResources.AlarmSwitch}" />
                                            </StackLayout>
                                        </StackLayout>
                                    </xct:Expander>
                                </StackLayout>
                                <!--</Frame>-->
                            </pancakeView:PancakeView>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Grid>
    </ContentPage.Content>
</ContentPage>